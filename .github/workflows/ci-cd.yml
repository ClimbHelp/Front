name: Front CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'front/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'front/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/front

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
        
    - name: Install dependencies
      working-directory: ./front
      run: npm ci
      
    - name: Run linting
      working-directory: ./front
      run: npm run lint
      
    - name: Run tests
      working-directory: ./front
      run: npm run test:coverage
      
    - name: Build application
      working-directory: ./front
      env:
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
        NEXT_PUBLIC_PAYMENT_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_PAYMENT_SERVICE_URL }}
        NEXT_PUBLIC_AI_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_AI_SERVICE_URL }}
        NEXT_PUBLIC_BDD_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_BDD_SERVICE_URL }}
      run: npm run build

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./front
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          NEXT_PUBLIC_PAYMENT_SERVICE_URL=${{ secrets.NEXT_PUBLIC_PAYMENT_SERVICE_URL }}
          NEXT_PUBLIC_AI_SERVICE_URL=${{ secrets.NEXT_PUBLIC_AI_SERVICE_URL }}
          NEXT_PUBLIC_BDD_SERVICE_URL=${{ secrets.NEXT_PUBLIC_BDD_SERVICE_URL }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying front to staging environment..."
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "Environment: staging"
        # Add your deployment commands here
        # Example: kubectl apply, docker-compose, etc.

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying front to production environment..."
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "Environment: production"
        # Add your deployment commands here
        # Example: kubectl apply, docker-compose, etc.
